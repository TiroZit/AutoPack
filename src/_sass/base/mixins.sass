@use 'sass:math'
$maxWidthContainer: 1320
// Минимальная ширина страницы
$minWidth: 320
// Ширина полотна (макета)
$maxWidth: 1920
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1110
$containerPadding: 20
$containerWidth: $maxWidthContainer + $containerPadding

@mixin responsive ($property, $startSize, $minSize, $type)
  $addSize: $startSize - $minSize
  @if $type==1
    // Только если меньше контейнера:
    #{$property}: $startSize + px
    @media (max-width: #{$maxWidthContainer + px})
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
  @else if $type==2
    // Только если больше контейнера:
    #{$property}: $startSize + px
    @media (min-width: #{$maxWidthContainer + px})
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}))
  @else
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}))
@mixin container($max-width:"120rem", $padding:"2rem")
  width: 100%
  max-width: #{$max-width}
  padding: 0 #{$padding}
  margin: 0 auto
@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0)
  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0)
    $widthFrom: $maxWidth
  @if ($minSize <= 0)
    $minSize: 0.0001
  @if ($startSize <= 0)
    $startSize: 0.0001

  // Брейк-поинты в EM
  $widthFromMedia: em($widthFrom)
  $widthToMedia: em($widthTo) 
  // Формула плавающего значения
  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo))
  $yIntersection: -$widthTo * $slope + $minSize
  $flyValue: #{rem($yIntersection)}" + " #{$slope * 100}vw  
  // Получение значения свойства
  $propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"}
  // Если отрицательные значения
  @if ($minSize > $startSize)
    $propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"}
  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2
    @media (min-width: $widthFromMedia)
      #{$property}: rem($startSize)
  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia)
    #{$property}: $propertyValue
  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3
    @media (max-width: $widthToMedia)
      #{$property}: rem($minSize)
// @include burger(35, 20, 992)
@mixin burger($width, $height, $media-max-width)
  .burger
    display: none
    @media(max-width: em($media-max-width))
      display: block
      position: relative
      z-index: 3
      width: #{$width}px
      height: #{$height}px
      span
        position: absolute
        top: calc( 50% - 1px )
        left: 0
        width: 100%
        height: 2px
        background-color: var(--orange)
        transition: .3s
        &:first-child
          top: 0
        &:last-child
          top: auto
          bottom: 0
      &.active
        span
          transform: scale(0)
          &:first-child
            top: calc( 50% - 1px )
            transform: rotate(-45deg)
          &:last-child
            bottom: calc( 50% - 1px )
            transform: rotate(45deg)